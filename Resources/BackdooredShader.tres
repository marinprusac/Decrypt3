[gd_resource type="Shader" format=2]

[resource]
code = "/*
	Glitch Effect Shader by Yui Kinomoto @arlez80
*/

shader_type canvas_item;

uniform float random_seed = 0;

uniform bool backdoored = false;

uniform float shake_power = 0.03;

uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;

uniform float shake_speed = 5.0;

uniform float shake_block_size = 30.5;

uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;

float random(float seed)
{
	return 543.2543 * sin(dot(vec2(seed, seed), vec2(3525.46, -54.3415)));
}

float random2(float seed1, float seed2)
{
	return random(seed1 + random(seed2));
}

void fragment( )
{
	if(!backdoored){
		COLOR = texture(TEXTURE, UV);
	}
	else{
		float haste = trunc(TIME*shake_speed);
		float enable_shift = float(fract(random2(haste, haste+random_seed)) < shake_rate);

		vec2 fixed_uv = UV;
		fixed_uv.x +=
		(fract(random((trunc(UV.y * shake_block_size) / shake_block_size) + TIME)) - 0.5)
		* shake_power * enable_shift;

		vec4 pixel_color = texture( TEXTURE, fixed_uv );
		pixel_color.r = mix(
			pixel_color.r,
			texture( TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ) ).r,
			enable_shift
		);
		pixel_color.b = mix(
			pixel_color.b,
			texture( TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ) ).b,
			enable_shift
		);
		pixel_color = vec4(mix(pixel_color.rgb, vec3(1,0,0.5), 0.08), pixel_color.a*0.5);
		
		
		COLOR = pixel_color;
	}
}"
